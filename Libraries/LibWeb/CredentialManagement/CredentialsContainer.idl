#import <CredentialManagement/Credential.idl>
#import <CredentialManagement/FederatedCredential.idl>
#import <CredentialManagement/PasswordCredential.idl>
#import <DOM/AbortSignal.idl>

// https://www.w3.org/TR/credential-management-1/#framework-credential-management
[Exposed=Window, SecureContext]
interface CredentialsContainer {
    Promise<Credential?> get(optional CredentialRequestOptions options = {});
    Promise<undefined> store(Credential credential);
    Promise<Credential?> create(optional CredentialCreationOptions options = {});
    Promise<undefined> preventSilentAccess();
};

dictionary CredentialRequestOptions {
    CredentialMediationRequirement mediation = "optional";
    AbortSignal signal;
    boolean password = false;
    // FederatedCredentialRequestOptions federated;
};

enum CredentialMediationRequirement {
    "silent",
    "optional",
    "conditional",
    "required"
};

dictionary CredentialCreationOptions {
    CredentialMediationRequirement mediation = "optional";
    AbortSignal signal;
    // PasswordCredentialInit password;
    // FederatedCredentialInit federated;
};
